//==========================================================
//  Title     : SONY Mobile CIS
//  Comment   : DUBE block
//  Project   : 
//
//  File Name : 
//
//
//  CONFIDENTIAL AND PROPRIETARY PRODUCT OF SONY CORPORATION
//  Copyright (c) 2015 Sony Corporation.  All Rights Reserved.
//
//  Reference File Name     : (Generated by Excel)
//  Reference File Revision : (none)
//  Reference File Project  : 
//==========================================================



module                  SCL_COTOI(
     VTCLK
    ,XRST
    ,RG_SCL_INPUT_WIDTH
    ,RG_SCL_INPUT_HEIGHT
    ,SCL_COBLK_OBLK_H
    ,SCL_COBLK_OBLK_V
    ,SCL_BUSY_BUSY
    ,SCL_COSIZE_SCALE_H_REC
    ,SCL_COSIZE_SCALE_V_REC
    ,SCL_COTOI_OTOI_H
    ,SCL_COTOI_OTOI_V
    ,SCL_COTOI_OTOI_H_1D
    ,SCL_COTOI_OTOI_V_1D
);


/*************************************************
INPUT , OUTPUT
*************************************************/
input           VTCLK;                          // 
input           XRST;                           // 
input   [10:0]  RG_SCL_INPUT_WIDTH;            // 
input   [10:0]  RG_SCL_INPUT_HEIGHT;           // 
input   [9:0]   SCL_COBLK_OBLK_H;               // 
input   [9:0]   SCL_COBLK_OBLK_V;               // 
input           SCL_BUSY_BUSY;                  // 
input   [20:0]  SCL_COSIZE_SCALE_H_REC;         // 
input   [20:0]  SCL_COSIZE_SCALE_V_REC;         // 
output  [17:0]  SCL_COTOI_OTOI_H;               // 
output  [17:0]  SCL_COTOI_OTOI_V;               // 
output  [17:0]  SCL_COTOI_OTOI_H_1D;            // 
output  [17:0]  SCL_COTOI_OTOI_V_1D;            // 

/*************************************************
reg, wire
*************************************************/
reg  [17:0] SCL_COTOI_OTOI_H;
reg  [17:0] SCL_COTOI_OTOI_V;
reg  [31:0] SCL_COTOI_OTOI_H_pre;
reg  [31:0] SCL_COTOI_OTOI_V_pre;
reg  [17:0]  SCL_COTOI_OTOI_H_1D;
reg  [17:0]  SCL_COTOI_OTOI_V_1D;
wire [10:0]  RG_SCL_INPUT_WIDTH_div2;
wire [10:0]  RG_SCL_INPUT_HEIGHT_div2;

assign RG_SCL_INPUT_HEIGHT_div2 = {(RG_SCL_INPUT_HEIGHT >> 1), 1'b0} - 1'b1;
assign RG_SCL_INPUT_WIDTH_div2 = {(RG_SCL_INPUT_WIDTH >> 1), 1'b0} - 1'b1;

always @(posedge VTCLK or negedge XRST) begin
  if (XRST == 1'b0) begin
    SCL_COTOI_OTOI_H <= 0;
    SCL_COTOI_OTOI_V <= 0;
    SCL_COTOI_OTOI_H_pre <= 0;
    SCL_COTOI_OTOI_V_pre <= 0;
    SCL_COTOI_OTOI_H_1D <= 0;
    SCL_COTOI_OTOI_V_1D <= 0;
  end else begin
    if (~SCL_BUSY_BUSY == 1'b1) begin
      //calc SCL_COTOI_OTOI_H
      SCL_COTOI_OTOI_H_pre <= ({SCL_COBLK_OBLK_H, 1'b0} + 11'b00000000001) * SCL_COSIZE_SCALE_H_REC;
      if (SCL_COTOI_OTOI_H_pre[25:0] > {RG_SCL_INPUT_WIDTH_div2, 15'b0}) begin
        SCL_COTOI_OTOI_H <= {RG_SCL_INPUT_WIDTH_div2, 8'b0};
      end else begin
        SCL_COTOI_OTOI_H <= SCL_COTOI_OTOI_H_pre[25:8];
      end

      //calc SCL_COTOI_OTOI_V
      SCL_COTOI_OTOI_V_pre <= ({SCL_COBLK_OBLK_V, 1'b0} + 11'b00000000001) * SCL_COSIZE_SCALE_V_REC;
      if (SCL_COTOI_OTOI_V_pre[25:0] > {RG_SCL_INPUT_HEIGHT_div2, 15'b0}) begin
        SCL_COTOI_OTOI_V <= {RG_SCL_INPUT_HEIGHT_div2, 8'b0};
      end else begin
        SCL_COTOI_OTOI_V <= SCL_COTOI_OTOI_V_pre[25:8];
      end
    end else begin
      SCL_COTOI_OTOI_H <= SCL_COTOI_OTOI_H;
      SCL_COTOI_OTOI_V <= SCL_COTOI_OTOI_V;
      SCL_COTOI_OTOI_H_pre <= SCL_COTOI_OTOI_H_pre;
      SCL_COTOI_OTOI_V_pre <= SCL_COTOI_OTOI_V_pre;
      SCL_COTOI_OTOI_H_1D <= SCL_COTOI_OTOI_H_1D;
      SCL_COTOI_OTOI_V_1D <= SCL_COTOI_OTOI_V_1D;
    end
  end  
end

endmodule
